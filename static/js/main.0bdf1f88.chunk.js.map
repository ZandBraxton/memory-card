{"version":3,"sources":["components/scoreboard.js","components/header.js","components/gameboard.js","components/card.js","components/useScore.js","components/useGameboard.js","components/useRandomPoke.js","App.js","index.js"],"names":["ScoreBoard","score","highscore","className","Header","GameBoard","cards","Card","props","useState","name","img","id","pokemon","setPokemon","useEffect","url","fetchData","a","fetch","response","json","sprites","front_default","console","log","onClick","handleClick","src","alt","useGameboard","randomPoke","setRandomPoke","pokemonArray","i","Math","floor","random","check","checkDuplicate","push","num","array","includes","useRandomPoke","setCards","clickedArray","setClickedArray","setScore","setHighscore","prevState","useScore","updateScore","resetScore","shuffle","randomIndex","currentIndex","length","map","card","App","cardcomponents","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0bdf1f88.chunk.js","sourcesContent":["export default function ScoreBoard({score, highscore}) {\n    return (\n        <div className=\"score-board\">\n            <p>Score: {score}</p>\n            <p>Highscore: {highscore}</p>\n        </div>\n    )\n}","import ScoreBoard from \"./scoreboard\"\nexport default function Header({score, highscore}) {\n    return(\n        <header>\n            <h1 className='title'>Memory Game</h1>\n            <ScoreBoard score={score} highscore={highscore}></ScoreBoard>\n        </header>\n    )\n}","import React from 'react'\nimport '../styles/gameboard.css'\n\n\nexport default function GameBoard({cards}) {\n\n    return(\n        <div className=\"game-board\">\n          {cards}\n        </div>\n    )\n\n}","import '../styles/card.css'\nimport React, {useState, useEffect} from 'react'\n\nexport default function Card(props) {\n    const [pokemon, setPokemon] = useState({\n        name: '',\n        img: '',\n        id: ''\n    })\n\n    useEffect(() => {\n        const url = \"https://pokeapi.co/api/v2/pokemon/\" + props.id\n        const fetchData = async() => {\n            try{\n                const response = await fetch(url)\n                const json = await response.json()\n                setPokemon({\n                    name: json.name,\n                    img: json.sprites.front_default,\n                    id: props.id\n                })\n            } catch(error) {\n                console.log(\"error\", error)\n            }\n        }\n\n        fetchData()\n\n    }, [props.id])\n\n\n    \n\nreturn (\n    <div className=\"card\" onClick={() => props.handleClick(pokemon.id)}>\n        <img \n        className=\"pokemon-img\" \n        src={pokemon.img} \n        alt={pokemon.name}/>\n        <div className=\"card-container\">\n            <h4><b className=\"pokemon-name\">{pokemon.name}</b></h4>\n        </div>\n    </div>\n)\n\n\n}","import { useState } from \"react\";\n\nexport const useScore = () => {\n    const [score, setScore] = useState(0)\n    const [highscore, setHighscore] = useState(0)\n\n    const updateScore = () => {\n        setScore((prevState) => {\n            const score = prevState + 1\n\n            if (score > highscore) {\n                setHighscore(score)\n            }\n\n\n            return score;\n        })\n    }\n\n    const resetScore = () => {\n        setScore(0)\n    }\n\n\n    return [score, highscore, updateScore, resetScore]\n}","import Card from './card'\nimport React, {useState} from 'react'\nimport { useScore } from './useScore'\nimport { useRandomPoke } from './useRandomPoke'\nimport '../styles/gameboard.css'\n\n\nexport const useGameboard = () => {\n    const [cards, setCards] = useRandomPoke()\n    const [clickedArray, setClickedArray] = useState([])\n    const [score, highscore, updateScore, resetScore] = useScore()\n\nconst handleClick = (id) => {\n    //check clicked array\n    if (clickedArray.includes(id)) {\n        resetScore()\n        setClickedArray([])\n        shuffle(cards)\n    } else {\n        //add to array\n        setClickedArray((prevState) => [...prevState, id])\n        updateScore()\n        shuffle(cards)\n    }\n}\n\nconst shuffle = (cards) => {\n    let currentIndex = cards.length, randomIndex\n\n    while (currentIndex !== 0) {\n        randomIndex = Math.floor(Math.random() * currentIndex)\n        currentIndex--\n\n        [cards[currentIndex], cards[randomIndex]] = [\n            cards[randomIndex], cards[currentIndex]]\n    }\n    setCards(cards)\n}\n\n    const cardcomponents = cards.map((card) => (\n        <Card id={card} key={card} handleClick={handleClick}></Card>\n    ))\n  \n    return [\n        score,\n        highscore,\n        cardcomponents,\n        handleClick\n    ]\n}","import {useState, useEffect} from 'react'\n\n\nexport const useRandomPoke = () => {\n    const [randomPoke, setRandomPoke] = useState([])\n\n    useEffect(() => {\n        const pokemonArray = []\n        for(let i = 0; i < 12; i++) {\n            let randomPoke = Math.floor(Math.random() * 150) + 1\n            let check = checkDuplicate(randomPoke, pokemonArray)\n            while(check === false) {\n            randomPoke = Math.floor(Math.random() * 150) + 1\n            check = checkDuplicate(randomPoke, pokemonArray)\n            }\n            pokemonArray.push(randomPoke)\n        }\n        setRandomPoke(pokemonArray)\n    },[])\n\n\n    const checkDuplicate = (num, array) => {\n        if(array.includes(num)) {\n            return false\n        } else {\n            return num\n        }\n    }\n\n    return [randomPoke, setRandomPoke]\n\n\n\n\n}","import './styles/App.css';\nimport React from 'react';\nimport Header from './components/header';\nimport GameBoard from './components/gameboard';\nimport { useGameboard } from './components/useGameboard';\nexport default function App() {\n    const [score, highscore, cardcomponents, handleClick] = useGameboard()\n\n  return (\n    <div className=\"App\">\n      <Header score={score} highscore={highscore}></Header>\n      <GameBoard cards={cardcomponents} handleClick={handleClick}></GameBoard>\n    </div>\n  );\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}